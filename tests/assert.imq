# Assertion framework

export func assert(a) {
    if not a {
        error("assertion failed");
    }
}

export func assert_eq(a, b) {
    assert(a == b);
}

export func assert_neq(a, b) {
    assert(a != b);
}

export func assert_image_eq(a, b) {
    assert_eq(a.width, b.width);
    assert_eq(a.height, b.height);

    for y = 0; y < a.height; y += 1; {
        for x = 0; x < a.width; x += 1; {
            ap = a.pixel(x, y);
            bp = b.pixel(x, y);
            assert(ap == bp);
            #assert(ap.nearly(bp, 0.01));
        }
    }
}

export func assert_image(img, path) {
    # Because the encoding process for images results in changes to colors, we encode the input image to disk
    # and then reload it.
    img.save('tests/result_images/test.png');
    testimg = image_load('tests/result_images/test.png');

    assert_image_eq(testimg, image_load('tests/result_images/' + path));
}